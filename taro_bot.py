from aiogram import Bot, Dispatcher, executor, types
from random import randint
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.dispatcher.filters import Text

API_TOKEN = '5770093719:AAE3dy3XxK3SHY41E8IDEI3UWJOcHFEW33g'

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

TARO = {1: ['https://avatars.dzeninfra.ru/get-zen_doc/5236207/pub_63383af93c55cc1557ed0f09_63383afd71a6914e41bd151b/scale_1200',
        '–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ –ø–æ—Ä–æ–≥–µ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–≥–æ –∏ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–µ–≥–æ –Ω–æ–≤–æ–≥–æ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è. –≠—Ç–æ –º–æ–∂–µ—Ç –ø–æ—Ç—Ä–µ–±–æ–≤–∞—Ç—å –æ—Ç –≤–∞—Å —Å–æ–≤–µ—Ä—à–∏—Ç—å —Å–ª–µ–ø–æ–π –ø—Ä—ã–∂–æ–∫ –≤–µ—Ä—ã.',
        '–î—É—Ä–∞–∫'],
        2: ['https://avatars.dzeninfra.ru/get-zen_doc/5097825/pub_63383af93c55cc1557ed0f09_63383afdd64c9a5b9c82c364/scale_1200',
        '–í—ã –º–æ–∂–µ—Ç–µ –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–µ –æ—Å—É—â–µ—Å—Ç–≤–∏—Ç—å —Å–≤–æ–∏ –º–µ—á—Ç—ã.',
        '–ú–∞–≥'],
        3: ['https://avatars.dzeninfra.ru/get-zen_doc/5283638/pub_63383af93c55cc1557ed0f09_63383afdb741fb6da17df75e/scale_1200',
        '–í–∞–º –Ω—É–∂–Ω–æ –≤—Ä–µ–º—è –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –∏ –ø—Ä–∏—Å–ª—É—à–∏–≤–∞–Ω–∏—è –∫ –≤–∞—à–µ–π –∏–Ω—Ç—É–∏—Ü–∏–∏, –∞ –Ω–µ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –æ—Ç–¥–∞–≤–∞—Ç—å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –≤–∞—à–µ–º—É –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É –∏ —Å–æ–∑–Ω–∞—Ç–µ–ª—å–Ω–æ–º—É —Ä–∞–∑—É–º—É. –í–∞–º –Ω—É–∂–Ω–æ –∑–∞–º–µ–¥–ª–∏—Ç—å—Å—è –∏ –ø–æ–¥—É–º–∞—Ç—å –æ —Ç–æ–º, —á—Ç–æ –≤—ã —É–∑–Ω–∞–ª–∏, –∏ –ø–æ–ª—É—á–∏—Ç—å –µ—â–µ –±–æ–ª—å—à–µ –∑–Ω–∞–Ω–∏–π, –ø—Ä–µ–∂–¥–µ —á–µ–º –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ –∏–ª–∏ –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å.',
        '–í–µ—Ä—Ö–æ–≤–Ω–∞—è –∂—Ä–∏—Ü–∞']
}



kb = ReplyKeyboardMarkup(resize_keyboard=True)
bt = KeyboardButton('–ü–æ–ª—É—á–∏—Ç—å —Ç–∞—Ä–æ —Ä–∞—Å–∫–ª–∞–¥')
kb.add(bt)


vote = InlineKeyboardMarkup(row_width=2)
vote_b1 = InlineKeyboardButton(text='ü•∞',callback_data='like')
vote_b2 = InlineKeyboardButton(text='–î–∞–≤–∞–π –µ—â–µ',callback_data='next')
vote.add(vote_b1,vote_b2)


async def on_startup(_):
   print('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω')

async def send_taro(message: types.Message):
    a = randint(1,3)
    await bot.send_message(chat_id=message.chat.id,text='–¢–≤–æ–π —Ä–∞—Å–∫–ª–∞–¥ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:')
    await bot.send_photo(chat_id=message.chat.id, 
                        photo=TARO[a][0],
                        caption=TARO[a][2]) 
    await bot.send_message(chat_id=message.chat.id,text=TARO[a][1],
                            reply_markup=vote)
    

kb_taro = ReplyKeyboardMarkup(resize_keyboard=True)
b1 = KeyboardButton(text='–ö–∞—Ä—Ç–∞ –¥–Ω—è')
b2 = KeyboardButton(text='–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
kb_taro.add(b1,b2)

@dp.message_handler(Text(equals='–ü–æ–ª—É—á–∏—Ç—å —Ç–∞—Ä–æ —Ä–∞—Å–∫–ª–∞–¥'))
async def karta(message: types.Message):
    await bot.send_message(chat_id=message.chat.id,text='–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ç–∞—Ä–æ —Ä–∞—Å–∫–ª–∞–¥ - –Ω–∞–∂–º–∏ –Ω–∞ "–ö–∞—Ä—Ç–∞ –¥–Ω—è"',)



@dp.message_handler(Text(equals='–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'))
async def menu(message: types.Message):
    await bot.send_message(chat_id=message.chat.id,
                           text='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 
                           reply_markup=kb)

@dp.message_handler(commands=['start']) 
async def send_welcome(message: types.Message):
   await bot.send_message(chat_id=message.chat.id,text='–ì–æ—Ç–æ–≤ —É–∑–Ω–∞—Ç—å —Å–≤–æ—é —Å—É–¥—å–±—É?',reply_markup=kb)
   await message.delete()


@dp.message_handler(Text(equals='–ö–∞—Ä—Ç–∞ –¥–Ω—è'))
async def photo(message: types.Message):
   await send_taro(message)



@dp.callback_query_handler()
async def vote_callback(callback: types.CallbackQuery):
    if callback.data == 'like':
        await callback.answer(text='–†–∞–¥, —á—Ç–æ —Ç–µ–±–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å')
    elif callback.data == 'next':
        await send_taro(message=callback.message)

# @dp.message_handler()
# async def echo(message: types.Message):
#    await bot.send_message(chat_id=message.chat.id, text='hello!')

if __name__ == '__main__':
   executor.start_polling(dp, on_startup=on_startup)
